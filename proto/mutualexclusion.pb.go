// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: proto/mutualexclusion.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mutualexclusion_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mutualexclusion_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_proto_mutualexclusion_proto_rawDescGZIP(), []int{0}
}

func (x *Reply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mutualexclusion_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mutualexclusion_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_mutualexclusion_proto_rawDescGZIP(), []int{1}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid int32  `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Time   int32  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	State  string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mutualexclusion_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mutualexclusion_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_mutualexclusion_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetUserid() int32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *User) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *User) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

var File_proto_mutualexclusion_proto protoreflect.FileDescriptor

var file_proto_mutualexclusion_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x32, 0xd5, 0x01, 0x0a, 0x0f, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x30, 0x01, 0x12, 0x2c, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_mutualexclusion_proto_rawDescOnce sync.Once
	file_proto_mutualexclusion_proto_rawDescData = file_proto_mutualexclusion_proto_rawDesc
)

func file_proto_mutualexclusion_proto_rawDescGZIP() []byte {
	file_proto_mutualexclusion_proto_rawDescOnce.Do(func() {
		file_proto_mutualexclusion_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_mutualexclusion_proto_rawDescData)
	})
	return file_proto_mutualexclusion_proto_rawDescData
}

var file_proto_mutualexclusion_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_mutualexclusion_proto_goTypes = []interface{}{
	(*Reply)(nil), // 0: proto.Reply
	(*Empty)(nil), // 1: proto.Empty
	(*User)(nil),  // 2: proto.User
}
var file_proto_mutualexclusion_proto_depIdxs = []int32{
	2, // 0: proto.Reply.user:type_name -> proto.User
	2, // 1: proto.MutualExclusion.BroadcastRequest:input_type -> proto.User
	2, // 2: proto.MutualExclusion.RecieveRequests:input_type -> proto.User
	0, // 3: proto.MutualExclusion.ReplyToRequest:input_type -> proto.Reply
	1, // 4: proto.MutualExclusion.AccessCriticalResource:input_type -> proto.Empty
	0, // 5: proto.MutualExclusion.BroadcastRequest:output_type -> proto.Reply
	2, // 6: proto.MutualExclusion.RecieveRequests:output_type -> proto.User
	1, // 7: proto.MutualExclusion.ReplyToRequest:output_type -> proto.Empty
	1, // 8: proto.MutualExclusion.AccessCriticalResource:output_type -> proto.Empty
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_mutualexclusion_proto_init() }
func file_proto_mutualexclusion_proto_init() {
	if File_proto_mutualexclusion_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_mutualexclusion_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mutualexclusion_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mutualexclusion_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_mutualexclusion_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_mutualexclusion_proto_goTypes,
		DependencyIndexes: file_proto_mutualexclusion_proto_depIdxs,
		MessageInfos:      file_proto_mutualexclusion_proto_msgTypes,
	}.Build()
	File_proto_mutualexclusion_proto = out.File
	file_proto_mutualexclusion_proto_rawDesc = nil
	file_proto_mutualexclusion_proto_goTypes = nil
	file_proto_mutualexclusion_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MutualExclusionClient is the client API for MutualExclusion service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MutualExclusionClient interface {
	BroadcastRequest(ctx context.Context, in *User, opts ...grpc.CallOption) (MutualExclusion_BroadcastRequestClient, error)
	RecieveRequests(ctx context.Context, in *User, opts ...grpc.CallOption) (MutualExclusion_RecieveRequestsClient, error)
	ReplyToRequest(ctx context.Context, in *Reply, opts ...grpc.CallOption) (*Empty, error)
	AccessCriticalResource(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type mutualExclusionClient struct {
	cc grpc.ClientConnInterface
}

func NewMutualExclusionClient(cc grpc.ClientConnInterface) MutualExclusionClient {
	return &mutualExclusionClient{cc}
}

func (c *mutualExclusionClient) BroadcastRequest(ctx context.Context, in *User, opts ...grpc.CallOption) (MutualExclusion_BroadcastRequestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MutualExclusion_serviceDesc.Streams[0], "/proto.MutualExclusion/BroadcastRequest", opts...)
	if err != nil {
		return nil, err
	}
	x := &mutualExclusionBroadcastRequestClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MutualExclusion_BroadcastRequestClient interface {
	Recv() (*Reply, error)
	grpc.ClientStream
}

type mutualExclusionBroadcastRequestClient struct {
	grpc.ClientStream
}

func (x *mutualExclusionBroadcastRequestClient) Recv() (*Reply, error) {
	m := new(Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mutualExclusionClient) RecieveRequests(ctx context.Context, in *User, opts ...grpc.CallOption) (MutualExclusion_RecieveRequestsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MutualExclusion_serviceDesc.Streams[1], "/proto.MutualExclusion/RecieveRequests", opts...)
	if err != nil {
		return nil, err
	}
	x := &mutualExclusionRecieveRequestsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MutualExclusion_RecieveRequestsClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type mutualExclusionRecieveRequestsClient struct {
	grpc.ClientStream
}

func (x *mutualExclusionRecieveRequestsClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mutualExclusionClient) ReplyToRequest(ctx context.Context, in *Reply, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.MutualExclusion/ReplyToRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mutualExclusionClient) AccessCriticalResource(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.MutualExclusion/AccessCriticalResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MutualExclusionServer is the server API for MutualExclusion service.
type MutualExclusionServer interface {
	BroadcastRequest(*User, MutualExclusion_BroadcastRequestServer) error
	RecieveRequests(*User, MutualExclusion_RecieveRequestsServer) error
	ReplyToRequest(context.Context, *Reply) (*Empty, error)
	AccessCriticalResource(context.Context, *Empty) (*Empty, error)
}

// UnimplementedMutualExclusionServer can be embedded to have forward compatible implementations.
type UnimplementedMutualExclusionServer struct {
}

func (*UnimplementedMutualExclusionServer) BroadcastRequest(*User, MutualExclusion_BroadcastRequestServer) error {
	return status.Errorf(codes.Unimplemented, "method BroadcastRequest not implemented")
}
func (*UnimplementedMutualExclusionServer) RecieveRequests(*User, MutualExclusion_RecieveRequestsServer) error {
	return status.Errorf(codes.Unimplemented, "method RecieveRequests not implemented")
}
func (*UnimplementedMutualExclusionServer) ReplyToRequest(context.Context, *Reply) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplyToRequest not implemented")
}
func (*UnimplementedMutualExclusionServer) AccessCriticalResource(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccessCriticalResource not implemented")
}

func RegisterMutualExclusionServer(s *grpc.Server, srv MutualExclusionServer) {
	s.RegisterService(&_MutualExclusion_serviceDesc, srv)
}

func _MutualExclusion_BroadcastRequest_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(User)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MutualExclusionServer).BroadcastRequest(m, &mutualExclusionBroadcastRequestServer{stream})
}

type MutualExclusion_BroadcastRequestServer interface {
	Send(*Reply) error
	grpc.ServerStream
}

type mutualExclusionBroadcastRequestServer struct {
	grpc.ServerStream
}

func (x *mutualExclusionBroadcastRequestServer) Send(m *Reply) error {
	return x.ServerStream.SendMsg(m)
}

func _MutualExclusion_RecieveRequests_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(User)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MutualExclusionServer).RecieveRequests(m, &mutualExclusionRecieveRequestsServer{stream})
}

type MutualExclusion_RecieveRequestsServer interface {
	Send(*User) error
	grpc.ServerStream
}

type mutualExclusionRecieveRequestsServer struct {
	grpc.ServerStream
}

func (x *mutualExclusionRecieveRequestsServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

func _MutualExclusion_ReplyToRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Reply)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MutualExclusionServer).ReplyToRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MutualExclusion/ReplyToRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MutualExclusionServer).ReplyToRequest(ctx, req.(*Reply))
	}
	return interceptor(ctx, in, info, handler)
}

func _MutualExclusion_AccessCriticalResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MutualExclusionServer).AccessCriticalResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MutualExclusion/AccessCriticalResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MutualExclusionServer).AccessCriticalResource(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _MutualExclusion_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.MutualExclusion",
	HandlerType: (*MutualExclusionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReplyToRequest",
			Handler:    _MutualExclusion_ReplyToRequest_Handler,
		},
		{
			MethodName: "AccessCriticalResource",
			Handler:    _MutualExclusion_AccessCriticalResource_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BroadcastRequest",
			Handler:       _MutualExclusion_BroadcastRequest_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RecieveRequests",
			Handler:       _MutualExclusion_RecieveRequests_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/mutualexclusion.proto",
}
